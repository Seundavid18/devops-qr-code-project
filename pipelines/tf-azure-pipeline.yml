trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '0.15.3'

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '$(terraformVersion)'

- task: Bash@3
  displayName: 'Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      terraform -version
      terraform init -input=false
    workingDirectory: '$(Build.SourcesDirectory)'

- task: Bash@3
  displayName: 'Terraform Validate'
  inputs:
    targetType: 'inline'
    script: |
      terraform validate
    workingDirectory: '$(Build.SourcesDirectory)'

- task: Bash@3
  displayName: 'Terraform Plan'
  inputs:
    targetType: 'inline'
    script: |
      terraform plan -input=false -out=tfplan
    workingDirectory: '$(Build.SourcesDirectory)'

- task: Bash@3
  displayName: 'Terraform Apply'
  inputs:
    targetType: 'inline'
    script: |
      terraform apply -input=false tfplan
    workingDirectory: '$(Build.SourcesDirectory)'
    environmentServiceName: '$(AZURE_SUBSCRIPTION)'
    backendServiceArm: '$(AZURE_SUBSCRIPTION)'
    backendAzureRmResourceGroupName: '$(RESOURCE_GROUP)'
    backendAzureRmStorageAccountName: '$(AZURE_STORAGE_ACCOUNT_NAME)'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'
