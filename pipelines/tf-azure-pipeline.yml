trigger:
- main

variables:
  azureServiceConnection: 'azure_service_connection'
  backendResourceGroup: 'rg-qr-code'
  backendStorageAccountName: 'tfqrcode'

stages:
  - stage: "Terraform_Deployment"
    jobs:
      - job: "AKS_Deployment"
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory/product-infrastructure)'
              backendServiceArm: '$(azureServiceConnection)'
              backendAzureRmResourceGroupName: '$(backendResourceGroup)'
              backendAzureRmStorageAccountName: '$(backendStorageAccountName)'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(Build.SourcesDirectory/product-infrastructure)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: '$(azureServiceConnection)'
              workingDirectory: '$(Build.SourcesDirectory/product-infrastructure)'
              commandOptions: '-out=tfplan'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(Build.SourcesDirectory/product-infrastructure)'
              commandOptions: 'tfplan --auto-approve'
              environmentServiceName: '$(azureServiceConnection)'
              backendServiceArm: '$(azureServiceConnection)'
              backendAzureRmResourceGroupName: '$(backendResourceGroup)'
              backendAzureRmStorageAccountName: '$(backendStorageAccountName)'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'